services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
      - ./init-mongodb-prod.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - blog-network
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: blogprod
    healthcheck:
      test: [ "CMD", "sh", "-c", "mongosh admin --host localhost --port 27017 -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin --eval 'db.adminCommand(\"ping\")'" ]
      interval: 30s
      timeout: 10s
      retries: 20
  config-server:
    image: ${DOCKERHUB_USERNAME}/blog-config-server:latest
    container_name: config-server
    restart: unless-stopped
    volumes:
      - config_server_maven_repo:/root/.m2
    networks:
      - blog-network
    environment:
      CONFIG_SERVER_PORT: ${CONFIG_SERVER_PORT}
      CONFIG_SERVER_USERNAME: ${CONFIG_SERVER_USERNAME}
      CONFIG_SERVER_PASSWORD: ${CONFIG_SERVER_PASSWORD}
      CONFIG_REPO_URI: ${CONFIG_REPO_URI}
      GIT_USERNAME: ${GIT_USERNAME}
      GIT_PASSWORD: ${GIT_PASSWORD}
      CONFIG_DEFAULT_LABEL: ${CONFIG_DEFAULT_LABEL}
      CONFIG_SEARCH_PATHS: ${CONFIG_SEARCH_PATHS}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 20
  blog-backend:
    image: ${DOCKERHUB_USERNAME}/blog-backend:latest
    restart: unless-stopped
    volumes:
      - blog_backend_maven_repo:/root/.m2
    networks:
      - blog-network
    depends_on:
      mongodb:
        condition: service_healthy
      config-server:
        condition: service_healthy
    environment:
      BLOG_BACKEND_PORT: ${BLOG_BACKEND_PORT}
      CONFIG_SERVER_URL: ${CONFIG_SERVER_URL}
      CONFIG_SERVER_USERNAME: ${CONFIG_SERVER_USERNAME}
      CONFIG_SERVER_PASSWORD: ${CONFIG_SERVER_PASSWORD}
      MONGODB_PROD_URI: ${MONGODB_PROD_URI}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 30
  caddy:
    image: caddy:2
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile.prod:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - blog-network
    depends_on:
      blog-backend:
        condition: service_healthy
networks:
  blog-network:
    name: blog-network
    driver: bridge
volumes:
  caddy_data:
    name: caddy_data
    driver: local
  caddy_config:
    name: caddy_config
    driver: local
  mongodb_data:
    name: mongodb_data
    driver: local
  config_server_maven_repo:
    name: config_server_maven_repo
    driver: local
  blog_backend_maven_repo:
    name: blog_backend_maven_repo
    driver: local